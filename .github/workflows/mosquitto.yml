name: mosquitto

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths:
      - Src/mosquitto/**
      - .github/workflows/mosquitto.yml
  pull_request:
    branches:
      - dev
    types: [opened, synchronize]
    paths:
      - Src/mosquitto/**
      - .github/workflows/mosquitto.yml

env:
  ARTIFECTS_REGISTRY: "gcr.io/iotapp-427320/iot-app-registry"
  CONTAINER_NAME: "pub-python"
  CHART_PATH: "Deploy/helm-template/iot"
  FOLDER_PATH: "Src/mosquitto"
  PROJECT_KEY: "iot-app_iot-app"
  PROJECT_ORGANIZATION: "iot-app"
  MS_NAME: "mosquitto"
  HELM_VERSION: "0.1.1"
  VALUE_FILE_PATH: "Deploy/helm-values/mosquitto.yaml"
  SERVICE_PORT: 80
  AUTOSCALING: false
  REPLICACOUNT: 1
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  scancode:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'dev'
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      - name: build
        uses: "./.github/template/build_validation"
        with:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_FOLDER: ${{ env.FOLDER_PATH }}
          PROJECT_KEY: ${{ env.PROJECT_KEY }}
          PROJECT_ORGANIZATION: ${{ env.PROJECT_ORGANIZATION }}
          

  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/main'
    environment: ${{ github.ref == 'refs/heads/dev' && 'DEV' || github.ref == 'refs/heads/qa' && 'QA' || github.ref == 'refs/heads/main' && 'PROD'  }}
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      - name: build
        uses: "./.github/template/build"
        with:
          FOLDER_PATH: ${{ env.FOLDER_PATH }} 
          ARTIFECTS_REGISTRY: ${{ env.ARTIFECTS_REGISTRY }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          CHART_PATH: ${{ env.CHART_PATH }}
          HELM_VERSION: ${{ env.HELM_VERSION }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}

  deploy_helm:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/main'
    environment: ${{ github.ref == 'refs/heads/dev' && 'DEV' || github.ref == 'refs/heads/qa' && 'QA' || github.ref == 'refs/heads/main' && 'PROD'  }}
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3
      - name: deploy
        uses: "./.github/template/deploy"
        with:
          ARTIFECTS_REGISTRY: ${{ env.ARTIFECTS_REGISTRY }} 
          HELM_VERSION: ${{ env.HELM_VERSION }}
          MS_NAME: ${{ env.MS_NAME }}
          VALUE_FILE_PATH: ${{ env.VALUE_FILE_PATH }}
          SERVICE_PORT: ${{ env.SERVICE_PORT }}
          AUTOSCALING: ${{ env.AUTOSCALING }}
          REPLICACOUNT: ${{ env.REPLICACOUNT }}
          NAMESPACE: ${{ vars.NAMESPACE }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }} 
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}


      


